CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_OBRVU_CHK_TRG" AFTER INSERT OR UPDATE OF "EGN", "FAM", "IME", "OBR_VA" ON VS_OWNER.VS_LS FOR EACH ROW 
DECLARE  
BEGIN
  NULL;
END;
/
CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_OBRVISHE_CHK_TRG" AFTER INSERT OR UPDATE OF "EGN", "FAM", "IME", "OBR_SR" ON VS_OWNER.VS_LS FOR EACH ROW 
DECLARE 
BEGIN
  NULL;
END;
/
CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_OBRVA_CHK_TRG" AFTER INSERT OR UPDATE OF "EGN", "FAM", "IME", "OBR_VISHE" ON VS_OWNER.VS_LS FOR EACH ROW 
BEGIN  
  NULL;
END;
/
CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_OBRSPZO_CHK_TRG" AFTER INSERT OR UPDATE OF "EGN", "FAM", "IME", "OBR_VU" ON VS_OWNER.VS_LS FOR EACH ROW 
BEGIN  
   NULL;
END;
/
CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_OBRSR_CHK_TRG" AFTER INSERT OR UPDATE OF "EGN", "FAM", "IME", "V_PODELENIE" ON VS_OWNER.VS_LS  FOR EACH ROW 
BEGIN    
  NULL;
END;
/
CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_OBRSZO_CHK_TRG" AFTER INSERT OR UPDATE OF "EGN", "FAM", "IME", "OBR_SHPZO" ON VS_OWNER.VS_LS FOR EACH ROW 
BEGIN  
  NULL;
END;
/
CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_MSST_UD_TRG" AFTER INSERT OR UPDATE OF "V_PODELENIE" ON VS_OWNER.VS_LS FOR EACH ROW 
BEGIN  
  NULL;
END;
/
CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_MSST_BFR_UPD_TRG" AFTER INSERT OR UPDATE OF "V_PODELENIE" ON VS_OWNER.VS_LS FOR EACH ROW 
BEGIN  
  NULL;
END;
/
CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_MSST_AFTR_UPD_TRG" AFTER UPDATE OF "V_PODELENIE" ON VS_OWNER.VS_LS FOR EACH ROW 
BEGIN  
  NULL;
END;
/
CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_MSST_AFTR_UPD_TRG" AFTER UPDATE OF "V_PODELENIE" ON VS_OWNER.VS_LS FOR EACH ROW 
BEGIN  
  NULL;
END;
/


CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_OBRG_DEL_TRG" BEFORE DELETE OR INSERT OR UPDATE OF "OBRG_EGNLS", "OBRG_KOD" ON "VS_OWNER"."VS_OBRG" 
DECLARE 
BEGIN
  NULL; 
END;
/

CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_OBRV_DEL_TRG" BEFORE DELETE OR INSERT OR UPDATE OF "OBRV_EGNLS", "OBRV_VVOKOD" ON "VS_OWNER"."VS_OBRV" 
DECLARE  
BEGIN 
  NULL;
END;
/

CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_OBRVA_DEL_TRG" BEFORE DELETE OR INSERT OR UPDATE OF "OBRVA_EGNLS" ON "VS_OWNER"."VS_OBRVA" 
DECLARE  
BEGIN
  NULL;
END;
/

CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_PRE_DELETE" BEFORE DELETE ON "VS_OWNER"."VS_LS" 
DECLARE   
BEGIN
  NULL;
END;
/

CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_OBRG_LS_OBRV_UPD_TRG" AFTER INSERT OR DELETE OR UPDATE OF OBRG_EGNLS, OBRG_KOD ON VS_OWNER.VS_OBRG  
DECLARE
BEGIN 
   NULL;
END;
/

CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_OBRV_LS_OBRV_UPD_TRG" AFTER DELETE OR INSERT OR UPDATE OF "OBRV_EGNLS", "OBRV_VVOKOD" ON "VS_OWNER"."VS_OBRV" 
DECLARE
BEGIN  
   NULL;
END;
/

CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_OBRVA_LS_UPD_TRG" AFTER DELETE OR INSERT OR UPDATE OF "OBRVA_EGNLS" ON "VS_OWNER"."VS_OBRVA" 
DECLARE  
BEGIN
   NULL;
END;
/

CREATE OR REPLACE TRIGGER "VS_OWNER"."VS_LS_POST_DELETE" AFTER DELETE ON "VS_OWNER"."VS_LS" 
DECLARE 
BEGIN
  NULL;
END;
/

-------------------------------------------------------------

INSERT INTO VS_OWNER.VS_LS(EGN, FAM, IME, KOD_KZV, KOD_KAT,
  NLD, ACK, KOD_NMA_MR, KOD_NMA_MJ, ADRES, TEL, KOD_NAR,
  KOD_SPO, S_UD, N_UD, D_UD, V_BA, KOD_VIS,
  KOD_TIT, KOD_ZVA, Z_Z, Z_ZKOGA, KOD_SPZZ,
  KOD_JIL, KOD_KRG, DOPUSK, KOD_VSO, KOD_VSS,
  GDAT, ATES, ATES_TXT, KOD_UVO, PSTG, PSTM,
  PSTD, OFZV, KOD_PSO, OBR_SHZO, OBR_SHPZO,
  OBR_VU, OBR_VA, OBR_VISHE, OBR_SR, V_PODELENIE,
  V_KOMANDA, ZVR_SNET, ZOTSR, ZOGVS, ZKOD_DLO,
  ZKOD_DLS, ZPR_DL, ZPDLO, ZPDLS, ZPPR_DL,
  KOD_KATV, ZKURS_DL, ZKURS_MES, ZVVO, ZDATA_OTCH,
  OT_UD, GR_UD, OSTG, OSTM, OSTD, TXT,
  DOPUSK_DO, Z_ZIZD, KOD_VSV, KOD_VSA)
VALUES ('8506026685', 'Атанасов', 'Христо', 'К', 91,
  NULL, NULL, NULL, NULL, NULL, NULL, 'Б',
  'Н', NULL, NULL, NULL, SYSDATE, NULL,
  NULL, NULL, NULL, NULL, NULL,
  'БЖ', 'А1+', NULL, NULL, NULL,
  NULL, NULL, NULL, NULL, NULL, NULL,
  NULL, NULL, NULL, 'N', 'N',
  'N', 'N', 'Y', 'Y', 1,
  NULL, 'N', 'N', 'N', NULL,
  NULL, NULL, NULL, NULL, NULL,
  NULL, NULL, NULL, NULL, NULL,
  NULL, NULL, NULL, NULL, NULL, NULL,
  NULL, NULL, NULL, NULL);
  
  
INSERT INTO VS_OWNER.VS_LS(EGN, FAM, IME, KOD_KZV, KOD_KAT,
  NLD, ACK, KOD_NMA_MR, KOD_NMA_MJ, ADRES, TEL, KOD_NAR,
  KOD_SPO, S_UD, N_UD, D_UD, V_BA, KOD_VIS,
  KOD_TIT, KOD_ZVA, Z_Z, Z_ZKOGA, KOD_SPZZ,
  KOD_JIL, KOD_KRG, DOPUSK, KOD_VSO, KOD_VSS,
  GDAT, ATES, ATES_TXT, KOD_UVO, PSTG, PSTM,
  PSTD, OFZV, KOD_PSO, OBR_SHZO, OBR_SHPZO,
  OBR_VU, OBR_VA, OBR_VISHE, OBR_SR, V_PODELENIE,
  V_KOMANDA, ZVR_SNET, ZOTSR, ZOGVS, ZKOD_DLO,
  ZKOD_DLS, ZPR_DL, ZPDLO, ZPDLS, ZPPR_DL,
  KOD_KATV, ZKURS_DL, ZKURS_MES, ZVVO, ZDATA_OTCH,
  OT_UD, GR_UD, OSTG, OSTM, OSTD, TXT,
  DOPUSK_DO, Z_ZIZD, KOD_VSV, KOD_VSA)
VALUES ('8506028121', 'Петров', 'Васил', 'К', 91,
  NULL, NULL, NULL, NULL, NULL, NULL, 'Б',
  'Н', NULL, NULL, NULL, SYSDATE, NULL,
  NULL, NULL, NULL, NULL, NULL,
  'БЖ', 'А1+', NULL, NULL, NULL,
  NULL, NULL, NULL, NULL, NULL, NULL,
  NULL, NULL, NULL, 'N', 'N',
  'N', 'N', 'Y', 'Y', 1,
  NULL, 'N', 'N', 'N', NULL,
  NULL, NULL, NULL, NULL, NULL,
  NULL, NULL, NULL, NULL, NULL,
  NULL, NULL, NULL, NULL, NULL, NULL,
  NULL, NULL, NULL, NULL);
  
  
-------------------------------------------------------------

/*
INSERT INTO PMIS_ADM.Persons (PersonID, GenderID, 
   DrivingLicense, HasMilitaryService, RecordOfServiceCopy, IsAborad)
VALUES ((SELECT PersonID FROM VS_OWNER.VS_LS WHERE EGN = '8506026685'), 1, 
   1, 0, 0, 0);
*/